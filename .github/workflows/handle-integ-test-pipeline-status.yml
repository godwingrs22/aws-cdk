# Handle integ test pipeline status

name: handle-integ-test-pipeline-status
on:
  pull_request_target:
    types:
      - opened
      - synchronize
      - reopened
  workflow_dispatch:
    inputs:
      commit_id:
        description: 'The commit ID triggered from CodePipeline'
        required: true
      pipeline_state:
        description: 'The state of the pipeline (success or failure)'
        required: true
      pr_number:
        description: 'The PR number to update check status'
        required: true
      ref:
        description: 'The ref of the branch that was tested'
        required: true

jobs:
  handle_status:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Update GitHub Status as Pending
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "Setting initial pending status for integ-test-status."
          curl -X POST \
            -H "Authorization: token ${{ secrets.PROJEN_GITHUB_TOKEN }}" \
            -d '{"state": "pending", "description": "Waiting for pipeline result", "context": "integ-test-status", "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"}' \
            "https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.event.pull_request.head.sha }}"

      # Add steps to handle the status or take actions based on the state
      - name: Update GitHub Status on Failure
        if: ${{ github.event.inputs.pipeline_state == 'failure' }}
        run: |
          echo "Pipeline failed, updating GitHub status to failure."

          curl -X POST \
            -H "Authorization: token ${{ secrets.PROJEN_GITHUB_TOKEN }}" \
            -d '{"state": "${{ github.event.inputs.pipeline_state }}", "description": "Pipeline status", "context": "integ-test-status", "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"}' \
            "https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.event.inputs.commit_id }}"         

        
      - name: Update GitHub Status on Success
        if: ${{ github.event.inputs.pipeline_state == 'success' }}
        run: |
          echo "Pipeline succeeded, updating GitHub status to success."

          curl -X POST \
            -H "Authorization: token ${{ secrets.PROJEN_GITHUB_TOKEN }}" \
            -d '{"state": "${{ github.event.inputs.pipeline_state }}", "description": "Pipeline status", "context": "integ-test-status", "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"}' \
            "https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.event.inputs.commit_id }}"         
